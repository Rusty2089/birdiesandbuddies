To Do

Text Feature

Enter Scores (by group)
-Determine Thru
-If selector is set to another hole, have it prefill the score values
-POST values to Daily



heroku init
pipenv lock (to lock pipfile which contains modules needing to be loaded)

heroku logs --tail
heroku ps:scale web=1
heroku run pip freeze

git add .
git commit -m "Update"
git push heroku master

python manage.py collectstatic <-- add static files locally before pushing to heroku

Status Bar Blocking Buttons can be fixed by adjusting "body {margin-bottom: 100px;}"




Build Daily from List of Profiles

Buttons
1. Delete db contents Daily.objects.all().delete()
2. Populate Golfers from Profile
3. Populate Groups in ADmin
4. Populate remaining data


Extra:
-Warning for deleting the Daily db
-Pin to keep from deleting the Daily 
-Post a warning if hole was skipped
-List what place someone is in
-Make it so less than 4 golfers can be in a group


>>> qs = Profile.objects.all()
>>> qs
<QuerySet [<Profile: RickyBobby>, <Profile: LizardKing>, <Profile: Coach>, <Profile: Stinky Pete>, <Profile: HappyG>, <Profile: Jones>, <Profile: Rusty2089>, <Profile: RedRocket>]>
>>> qs = qs[0]
>>> qs
<Profile: RickyBobby>
>>> getattr(Profile, 'first_name')
<django.db.models.query_utils.DeferredAttribute object at 0x044D81F0>
>>> getattr(Profile, 'user_id')
<django.db.models.query_utils.DeferredAttribute object at 0x044D81B0>
>>> qs.first_name
'Ricky'
>>> getattr(qs, 'first_name')
'Ricky'
>>> thisstring = 'first_name'
>>> getattr(qs, thisstring)
'Ricky'
>>>